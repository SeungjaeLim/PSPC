{"version":3,"sources":["LoginPage.js","StopwatchPage.js","WeeklyGrid.js","IOTSettings.js","RegisterPage.js","App.js","reportWebVitals.js","index.js"],"names":["LoginPage","_ref","onLogin","onNavigateRegister","username","setUsername","useState","password","setPassword","React","createElement","Box","mt","src","concat","process","alt","style","maxWidth","height","onSubmit","event","preventDefault","TextField","label","variant","value","onChange","e","target","fullWidth","margin","type","Button","color","onClick","sx","StopwatchPage","onStop","time","setTime","intervalId","setIntervalId","useEffect","id","setInterval","prevTime","clearInterval","textAlign","Typography","gutterBottom","totalSeconds","Math","floor","map","unit","String","padStart","join","handleStop","WeeklyGrid","studyData","open","setOpen","selectedData","setSelectedData","COLORS","Grid","container","spacing","entry","index","data","name","correctPostureTime","incorrectPostureTime","item","xs","sm","key","handleOpen","Paper","elevation","padding","cursor","date","PieChart","width","Pie","cx","cy","outerRadius","dataKey","Cell","fill","length","Tooltip","Modal","onClose","handleClose","aria-labelledby","aria-describedby","position","top","left","transform","bgcolor","boxShadow","p","component","marginTop","IOTSettings","onSetIOT","RegisterPage","onRegister","onNavigateLogin","email","setEmail","theme","createTheme","palette","primary","main","background","default","App","loggedIn","setLoggedIn","onStopwatchPage","setOnStopwatchPage","setStudyData","currentTemp","setCurrentTemp","currentHumid","setCurrentHumid","preferredTemp","setPreferredTemp","preferredHumid","setPreferredHumid","onRegisterPage","setOnRegisterPage","ThemeProvider","CssBaseline","display","Container","handleRegister","console","log","navigateToLogin","studiedTime","mb","getTodaysStudyTime","today","Date","toISOString","split","todayData","find","formatTime","handleStartStudy","Table","mx","TableBody","TableRow","TableCell","align","ThermostatIcon","OpacityIcon","LightModeIcon","handleSetIOT","handleLogin","navigateToRegister","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.581fdafe.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\n\r\nfunction LoginPage({ onLogin, onNavigateRegister }) {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    onLogin();\r\n  };\r\n\r\n  return (\r\n    <Box mt={5}>\r\n        <img src={`${process.env.PUBLIC_URL}/images/title.jpg`} alt=\"Title\" style={{ maxWidth: '100%', height: 'auto' }} />\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          label=\"Username\"\r\n          variant=\"outlined\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          variant=\"outlined\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n          Login\r\n        </Button>\r\n      </form>\r\n      <Button\r\n        variant=\"text\"\r\n        color=\"primary\"\r\n        onClick={onNavigateRegister}\r\n        sx={{ mt: 2 }}\r\n      >\r\n        Don't have an account? Register\r\n      </Button>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction StopwatchPage({ onStop }) {\r\n  const [time, setTime] = useState(0);\r\n  const [intervalId, setIntervalId] = useState(null);\r\n  \r\n\r\n  useEffect(() => {\r\n    const id = setInterval(() => {\r\n      setTime((prevTime) => prevTime + 1);\r\n    }, 1000);\r\n    setIntervalId(id);\r\n    return () => clearInterval(id);\r\n  }, []);\r\n\r\n  const handleStop = () => {\r\n    clearInterval(intervalId);\r\n    onStop(time);\r\n  };\r\n\r\n  const formatTime = (totalSeconds) => {\r\n    const hours = Math.floor(totalSeconds / 3600);\r\n    const minutes = Math.floor((totalSeconds % 3600) / 60);\r\n    const seconds = totalSeconds % 60;\r\n  \r\n    return [hours, minutes, seconds]\r\n      .map(unit => String(unit).padStart(2, '0'))\r\n      .join(':');\r\n  };\r\n  \r\n\r\n  return (\r\n    <Box mt={5} textAlign=\"center\">\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        {formatTime(time)}\r\n      </Typography>\r\n      <Button onClick={handleStop} variant=\"contained\" color=\"primary\">\r\n        Stop\r\n      </Button>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default StopwatchPage;\r\n","import React, { useState } from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Box from '@mui/material/Box';\r\nimport { PieChart, Pie, Cell, Tooltip } from 'recharts';\r\nimport Modal from '@mui/material/Modal';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction WeeklyGrid({ studyData }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const handleOpen = (data) => {\r\n    setSelectedData(data);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const COLORS = ['#0088FE', '#FF8042']; // Blue for correct, Orange for incorrect\r\n\r\n  return (\r\n    <Box mt={2}>\r\n      <Grid container spacing={2}>\r\n        {studyData.map((entry, index) => {\r\n          const data = [\r\n            { name: 'Correct Posture', value: entry.correctPostureTime },\r\n            { name: 'Incorrect Posture', value: entry.incorrectPostureTime },\r\n          ];\r\n\r\n          return (\r\n            <Grid item xs={12} sm={4} key={index} onClick={() => handleOpen(entry)}>\r\n              <Paper elevation={3} sx={{ padding: 2, cursor: 'pointer', textAlign: 'center' }}>\r\n                <Typography variant=\"subtitle1\">{entry.date}</Typography>\r\n                <PieChart width={200} height={200}>\r\n                  <Pie data={data} cx=\"35%\" cy=\"50%\" outerRadius={60} dataKey=\"value\">\r\n                    {data.map((entry, index) => (\r\n                      <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                    ))}\r\n                  </Pie>\r\n                  <Tooltip />\r\n                </PieChart>\r\n              </Paper>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n\r\n      <Modal\r\n  open={open}\r\n  onClose={handleClose}\r\n  aria-labelledby=\"study-details\"\r\n  aria-describedby=\"study-details-description\"\r\n>\r\n  <Box sx={{ \r\n      position: 'absolute', \r\n      top: '50%', \r\n      left: '50%', \r\n      transform: 'translate(-50%, -50%)', \r\n      bgcolor: 'background.paper', \r\n      boxShadow: 24, \r\n      p: 4, \r\n      maxWidth: 500\r\n    }}>\r\n    <Typography id=\"study-details\" variant=\"h6\" component=\"h2\">\r\n      Study Details - {selectedData.date}\r\n    </Typography>\r\n    <img src={`${process.env.PUBLIC_URL}/images/cat1.jpg`} alt=\"Cat\" style={{ maxWidth: '100%', height: 'auto', marginTop: '20px' }} />\r\n    <Typography id=\"study-details-description\" sx={{ mt: 2 }}>\r\n      Correct Posture Time: {selectedData.correctPostureTime} minutes\r\n    </Typography>\r\n    <Typography id=\"study-details-description\">\r\n      Incorrect Posture Time: {selectedData.incorrectPostureTime} minutes\r\n    </Typography>\r\n  </Box>\r\n</Modal>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default WeeklyGrid;\r\n","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\n\r\nfunction IOTSettings({ onSetIOT }) {\r\n  return (\r\n    <Button onClick={onSetIOT} variant=\"contained\" color=\"primary\" sx={{ mt: 2 }}>\r\n      Set IOT Preferences\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default IOTSettings;\r\n","import React, { useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\n\r\nfunction RegisterPage({ onRegister, onNavigateLogin }) {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [email, setEmail] = useState(''); // Additional field for email\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    // Here, you'll handle the registration logic\r\n    onRegister(username, email, password);\r\n  };\r\n\r\n  return (\r\n    <Box mt={5}>\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          label=\"Username\"\r\n          variant=\"outlined\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          label=\"Email\"\r\n          variant=\"outlined\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          variant=\"outlined\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n          Register\r\n        </Button>\r\n        <Button\r\n        variant=\"text\"\r\n        color=\"primary\"\r\n        onClick={onNavigateLogin}\r\n        sx={{ mt: 2 }}\r\n      >\r\n        Already have an account? Login\r\n      </Button>\r\n      </form>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n","import './App.css';\nimport React, { useState } from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport LoginPage from './LoginPage';\nimport StopwatchPage from './StopwatchPage';\nimport WeeklyGrid from './WeeklyGrid';\nimport IOTSettings from './IOTSettings';\nimport RegisterPage from './RegisterPage';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Container from '@mui/material/Container';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableRow from '@mui/material/TableRow';\nimport ThermostatIcon from '@mui/icons-material/Thermostat';\nimport OpacityIcon from '@mui/icons-material/Opacity';\nimport LightModeIcon from '@mui/icons-material/LightMode';\nimport Typography from '@mui/material/Typography';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#ff7f50',\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [onStopwatchPage, setOnStopwatchPage] = useState(false);\n  const [studyData, setStudyData] = useState([\n    { date: '2023-11-01', correctPostureTime: 120, incorrectPostureTime: 30 },\n    { date: '2023-11-02', correctPostureTime: 90, incorrectPostureTime: 15 },\n    // ... more dates with times\n  ]);\n  const [currentTemp, setCurrentTemp] = useState(22);\n  const [currentHumid, setCurrentHumid] = useState(45);\n  const [preferredTemp, setPreferredTemp] = useState(24);\n  const [preferredHumid, setPreferredHumid] = useState(50);\n\n  const handleLogin = () => setLoggedIn(true);\n  const handleStartStudy = () => setOnStopwatchPage(true);\n  const handleStopStudy = (studiedTime) => {\n    setOnStopwatchPage(false);\n    // Update study data logic here\n  };\n  const handleSetIOT = () => {\n    // Set IOT logic here\n  };\n  const handleRegister = (username, email, password) => {\n    // Handle the registration logic here\n    // For now, just log the details\n    console.log(username, email, password);\n    // You might want to set loggedIn to true after successful registration\n  };\n\n\n  const formatTime = (totalSeconds) => {\n    const hours = Math.floor(totalSeconds / 3600);\n    const minutes = Math.floor((totalSeconds % 3600) / 60);\n    const seconds = totalSeconds % 60;\n  \n    return [hours, minutes, seconds]\n      .map(unit => String(unit).padStart(2, '0'))\n      .join(':');\n  };\n\n  \n  const getTodaysStudyTime = () => {\n    const today = new Date().toISOString().split('T')[0];\n    const todayData = studyData.find(entry => entry.date === today);\n    // Assuming study times are stored in minutes in your data\n    const totalSecondsToday = (todayData ? (todayData.correctPostureTime + todayData.incorrectPostureTime) : 0) * 60;\n    return formatTime(totalSecondsToday);\n  };\n\n  const [onRegisterPage, setOnRegisterPage] = useState(false); // State to track the registration page\n  const navigateToRegister = () => setOnRegisterPage(true);\n  const navigateToLogin = () => setOnRegisterPage(false);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Box display=\"flex\">\n        <Container maxWidth=\"sm\">\n        {!loggedIn && !onRegisterPage ? (\n            <LoginPage onLogin={handleLogin} onNavigateRegister={navigateToRegister} />\n          ) : onRegisterPage ? (\n            <RegisterPage onRegister={handleRegister} onNavigateLogin={navigateToLogin} />\n          ) : onStopwatchPage ? (\n            <StopwatchPage onStop={handleStopStudy} />\n          ) : (\n            <Box textAlign=\"center\" mt={5}>\n              <Typography variant=\"h4\" sx={{ mb: 2 }}>\n                {getTodaysStudyTime()}\n              </Typography>\n              <Button variant=\"contained\" color=\"primary\" onClick={handleStartStudy} sx={{ mb: 2 }}>\n                Start Study\n              </Button>\n              <WeeklyGrid studyData={studyData} />\n              <Table sx={{ mt: 2, mx: 'auto' }}>\n                <TableBody>\n                  <TableRow>\n                    <TableCell align=\"center\"><ThermostatIcon /></TableCell>\n                    <TableCell align=\"center\">{currentTemp}°C</TableCell>\n                    <TableCell align=\"center\">{preferredTemp}°C</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell align=\"center\"><OpacityIcon /></TableCell>\n                    <TableCell align=\"center\">{currentHumid}%</TableCell>\n                    <TableCell align=\"center\">{preferredHumid}%</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell align=\"center\"><LightModeIcon /></TableCell>\n                    <TableCell align=\"center\">--</TableCell> {/* Replace -- with actual data */}\n                    <TableCell align=\"center\">--</TableCell> {/* Replace -- with actual data */}\n                  </TableRow>\n                </TableBody>\n              </Table>\n              <IOTSettings onSetIOT={handleSetIOT} />\n              \n            </Box>\n          )}\n        </Container>\n      </Box>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}