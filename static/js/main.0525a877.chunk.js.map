{"version":3,"sources":["LoginPage.js","StopwatchPage.js","WeeklyGrid.js","IOTSettings.js","App.js","reportWebVitals.js","index.js"],"names":["LoginPage","_ref","onLogin","username","setUsername","useState","password","setPassword","React","createElement","Box","mt","src","concat","process","alt","style","maxWidth","height","onSubmit","event","preventDefault","TextField","label","variant","value","onChange","e","target","fullWidth","margin","type","Button","color","StopwatchPage","onStop","time","setTime","intervalId","setIntervalId","useEffect","id","setInterval","prevTime","clearInterval","textAlign","Typography","gutterBottom","totalSeconds","Math","floor","map","unit","String","padStart","join","onClick","handleStop","WeeklyGrid","studyData","open","setOpen","selectedData","setSelectedData","COLORS","Grid","container","spacing","entry","index","data","name","correctPostureTime","incorrectPostureTime","item","xs","sm","key","handleOpen","Paper","elevation","sx","padding","cursor","date","PieChart","width","Pie","cx","cy","outerRadius","dataKey","Cell","fill","length","Tooltip","Modal","onClose","handleClose","aria-labelledby","aria-describedby","position","top","left","transform","bgcolor","boxShadow","p","component","marginTop","IOTSettings","onSetIOT","theme","createTheme","palette","primary","main","background","default","App","loggedIn","setLoggedIn","onStopwatchPage","setOnStopwatchPage","setStudyData","currentTemp","setCurrentTemp","currentHumid","setCurrentHumid","preferredTemp","setPreferredTemp","preferredHumid","setPreferredHumid","ThemeProvider","CssBaseline","display","justifyContent","alignItems","Container","studiedTime","mb","getTodaysStudyTime","today","Date","toISOString","split","todayData","find","formatTime","handleStartStudy","Table","mx","TableBody","TableRow","TableCell","align","ThermostatIcon","OpacityIcon","LightModeIcon","handleSetIOT","handleLogin","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.0525a877.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\n\r\nfunction LoginPage({ onLogin }) {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    onLogin();\r\n  };\r\n\r\n  return (\r\n    <Box mt={5}>\r\n        <img src={`${process.env.PUBLIC_URL}/images/title.jpg`} alt=\"Title\" style={{ maxWidth: '100%', height: 'auto' }} />\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          label=\"Username\"\r\n          variant=\"outlined\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          variant=\"outlined\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n          Login\r\n        </Button>\r\n      </form>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction StopwatchPage({ onStop }) {\r\n  const [time, setTime] = useState(0);\r\n  const [intervalId, setIntervalId] = useState(null);\r\n  \r\n\r\n  useEffect(() => {\r\n    const id = setInterval(() => {\r\n      setTime((prevTime) => prevTime + 1);\r\n    }, 1000);\r\n    setIntervalId(id);\r\n    return () => clearInterval(id);\r\n  }, []);\r\n\r\n  const handleStop = () => {\r\n    clearInterval(intervalId);\r\n    onStop(time);\r\n  };\r\n\r\n  const formatTime = (totalSeconds) => {\r\n    const hours = Math.floor(totalSeconds / 3600);\r\n    const minutes = Math.floor((totalSeconds % 3600) / 60);\r\n    const seconds = totalSeconds % 60;\r\n  \r\n    return [hours, minutes, seconds]\r\n      .map(unit => String(unit).padStart(2, '0'))\r\n      .join(':');\r\n  };\r\n  \r\n\r\n  return (\r\n    <Box mt={5} textAlign=\"center\">\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        {formatTime(time)}\r\n      </Typography>\r\n      <Button onClick={handleStop} variant=\"contained\" color=\"primary\">\r\n        Stop\r\n      </Button>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default StopwatchPage;\r\n","import React, { useState } from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Box from '@mui/material/Box';\r\nimport { PieChart, Pie, Cell, Tooltip } from 'recharts';\r\nimport Modal from '@mui/material/Modal';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction WeeklyGrid({ studyData }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const handleOpen = (data) => {\r\n    setSelectedData(data);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const COLORS = ['#0088FE', '#FF8042']; // Blue for correct, Orange for incorrect\r\n\r\n  return (\r\n    <Box mt={2}>\r\n      <Grid container spacing={2}>\r\n        {studyData.map((entry, index) => {\r\n          const data = [\r\n            { name: 'Correct Posture', value: entry.correctPostureTime },\r\n            { name: 'Incorrect Posture', value: entry.incorrectPostureTime },\r\n          ];\r\n\r\n          return (\r\n            <Grid item xs={12} sm={4} key={index} onClick={() => handleOpen(entry)}>\r\n              <Paper elevation={3} sx={{ padding: 2, cursor: 'pointer', textAlign: 'center' }}>\r\n                <Typography variant=\"subtitle1\">{entry.date}</Typography>\r\n                <PieChart width={200} height={200}>\r\n                  <Pie data={data} cx=\"35%\" cy=\"50%\" outerRadius={60} dataKey=\"value\">\r\n                    {data.map((entry, index) => (\r\n                      <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                    ))}\r\n                  </Pie>\r\n                  <Tooltip />\r\n                </PieChart>\r\n              </Paper>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n\r\n      <Modal\r\n  open={open}\r\n  onClose={handleClose}\r\n  aria-labelledby=\"study-details\"\r\n  aria-describedby=\"study-details-description\"\r\n>\r\n  <Box sx={{ \r\n      position: 'absolute', \r\n      top: '50%', \r\n      left: '50%', \r\n      transform: 'translate(-50%, -50%)', \r\n      bgcolor: 'background.paper', \r\n      boxShadow: 24, \r\n      p: 4, \r\n      maxWidth: 500\r\n    }}>\r\n    <Typography id=\"study-details\" variant=\"h6\" component=\"h2\">\r\n      Study Details - {selectedData.date}\r\n    </Typography>\r\n    <img src={`${process.env.PUBLIC_URL}/images/cat1.jpg`} alt=\"Cat\" style={{ maxWidth: '100%', height: 'auto', marginTop: '20px' }} />\r\n    <Typography id=\"study-details-description\" sx={{ mt: 2 }}>\r\n      Correct Posture Time: {selectedData.correctPostureTime} minutes\r\n    </Typography>\r\n    <Typography id=\"study-details-description\">\r\n      Incorrect Posture Time: {selectedData.incorrectPostureTime} minutes\r\n    </Typography>\r\n  </Box>\r\n</Modal>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default WeeklyGrid;\r\n","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\n\r\nfunction IOTSettings({ onSetIOT }) {\r\n  return (\r\n    <Button onClick={onSetIOT} variant=\"contained\" color=\"primary\" sx={{ mt: 2 }}>\r\n      Set IOT Preferences\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default IOTSettings;\r\n","import './App.css';\nimport React, { useState } from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport LoginPage from './LoginPage';\nimport StopwatchPage from './StopwatchPage';\nimport WeeklyGrid from './WeeklyGrid';\nimport IOTSettings from './IOTSettings';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Container from '@mui/material/Container';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableRow from '@mui/material/TableRow';\nimport ThermostatIcon from '@mui/icons-material/Thermostat';\nimport OpacityIcon from '@mui/icons-material/Opacity';\nimport LightModeIcon from '@mui/icons-material/LightMode';\nimport Typography from '@mui/material/Typography';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#ff7f50',\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [onStopwatchPage, setOnStopwatchPage] = useState(false);\n  const [studyData, setStudyData] = useState([\n    { date: '2023-11-01', correctPostureTime: 120, incorrectPostureTime: 30 },\n    { date: '2023-11-02', correctPostureTime: 90, incorrectPostureTime: 15 },\n    // ... more dates with times\n  ]);\n  const [currentTemp, setCurrentTemp] = useState(22);\n  const [currentHumid, setCurrentHumid] = useState(45);\n  const [preferredTemp, setPreferredTemp] = useState(24);\n  const [preferredHumid, setPreferredHumid] = useState(50);\n\n  const handleLogin = () => setLoggedIn(true);\n  const handleStartStudy = () => setOnStopwatchPage(true);\n  const handleStopStudy = (studiedTime) => {\n    setOnStopwatchPage(false);\n    // Update study data logic here\n  };\n  const handleSetIOT = () => {\n    // Set IOT logic here\n  };\n\n  const formatTime = (totalSeconds) => {\n    const hours = Math.floor(totalSeconds / 3600);\n    const minutes = Math.floor((totalSeconds % 3600) / 60);\n    const seconds = totalSeconds % 60;\n  \n    return [hours, minutes, seconds]\n      .map(unit => String(unit).padStart(2, '0'))\n      .join(':');\n  };\n\n  \n  const getTodaysStudyTime = () => {\n    const today = new Date().toISOString().split('T')[0];\n    const todayData = studyData.find(entry => entry.date === today);\n    // Assuming study times are stored in minutes in your data\n    const totalSecondsToday = (todayData ? (todayData.correctPostureTime + todayData.incorrectPostureTime) : 0) * 60;\n    return formatTime(totalSecondsToday);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"80vh\">\n        <Container maxWidth=\"sm\">\n          {!loggedIn ? (\n            <LoginPage onLogin={handleLogin} />\n          ) : onStopwatchPage ? (\n            <StopwatchPage onStop={handleStopStudy} />\n          ) : (\n            <Box textAlign=\"center\" mt={5}>\n              <Typography variant=\"h4\" sx={{ mb: 2 }}>\n                {getTodaysStudyTime()}\n              </Typography>\n              <Button variant=\"contained\" color=\"primary\" onClick={handleStartStudy} sx={{ mb: 2 }}>\n                Start Study\n              </Button>\n              <WeeklyGrid studyData={studyData} />\n              <Table sx={{ mt: 2, mx: 'auto' }}>\n                <TableBody>\n                  <TableRow>\n                    <TableCell align=\"center\"><ThermostatIcon /></TableCell>\n                    <TableCell align=\"center\">{currentTemp}°C</TableCell>\n                    <TableCell align=\"center\">{preferredTemp}°C</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell align=\"center\"><OpacityIcon /></TableCell>\n                    <TableCell align=\"center\">{currentHumid}%</TableCell>\n                    <TableCell align=\"center\">{preferredHumid}%</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell align=\"center\"><LightModeIcon /></TableCell>\n                    <TableCell align=\"center\">--</TableCell> {/* Replace -- with actual data */}\n                    <TableCell align=\"center\">--</TableCell> {/* Replace -- with actual data */}\n                  </TableRow>\n                </TableBody>\n              </Table>\n              <IOTSettings onSetIOT={handleSetIOT} />\n              \n            </Box>\n          )}\n        </Container>\n      </Box>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}