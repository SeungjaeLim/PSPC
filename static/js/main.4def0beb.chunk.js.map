{"version":3,"sources":["LoginPage.js","StopwatchPage.js","WeeklyGrid.js","IOTSettings.js","RegisterPage.js","App.js","reportWebVitals.js","index.js"],"names":["LoginPage","_ref","onLogin","onNavigateRegister","username","setUsername","useState","password","setPassword","React","createElement","Box","mt","src","concat","process","alt","style","maxWidth","height","onSubmit","async","event","preventDefault","response","fetch","method","headers","Content-Type","body","JSON","stringify","id","ok","data","json","console","log","message","error","TextField","label","variant","value","onChange","e","target","fullWidth","margin","type","Button","color","onClick","sx","StopwatchPage","onStop","time","setTime","showWarning","setShowWarning","intervalId","useRef","warningTimeout","useEffect","current","setInterval","prevTime","sendPeriodicUpdate","clearInterval","clearTimeout","Error","result","displayWarning","setTimeout","textAlign","Typography","gutterBottom","totalSeconds","Math","floor","map","unit","String","padStart","join","handleStop","WeeklyGrid","studyData","open","setOpen","selectedData","setSelectedData","COLORS","Grid","container","spacing","entry","index","name","correctPostureTime","incorrectPostureTime","item","xs","sm","key","handleOpen","Paper","elevation","padding","cursor","date","PieChart","width","Pie","cx","cy","outerRadius","dataKey","Cell","fill","length","Tooltip","Modal","onClose","handleClose","aria-labelledby","aria-describedby","position","top","left","transform","bgcolor","boxShadow","p","component","marginTop","IOTSettings","onSetIOT","RegisterPage","onRegister","onNavigateLogin","email","setEmail","detail","theme","createTheme","palette","primary","main","background","default","App","loggedIn","setLoggedIn","onStopwatchPage","setOnStopwatchPage","setStudyData","advise","setAdvise","fetchAdvise","text","startsWith","endsWith","substring","fetchStudyData","setEnvData","humidity","temperature","brightness","fetchEnvData","envData","currentTemp","setCurrentTemp","currentHumid","setCurrentHumid","preferredTemp","setPreferredTemp","preferredHumid","setPreferredHumid","onRegisterPage","setOnRegisterPage","ThemeProvider","CssBaseline","display","Container","handleRegister","navigateToLogin","studiedTime","mb","getTodaysStudyTime","now","Date","today","getTime","toISOString","split","todayData","find","formatTime","handleStartStudy","Fragment","Table","mx","TableBody","TableRow","TableCell","align","ThermostatIcon","OpacityIcon","LightModeIcon","handleSetIOT","handleLogin","navigateToRegister","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.4def0beb.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\n\r\nfunction LoginPage({ onLogin, onNavigateRegister }) {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/login/`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          id: username,\r\n          password: password,\r\n        }),\r\n      });\r\n  \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log(data.message); // Or handle the successful login\r\n        onLogin(); // Assuming this updates the loggedIn state\r\n      } else {\r\n        console.error('Login failed');\r\n        // Handle login failure\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box mt={5}>\r\n        <img src={`${process.env.PUBLIC_URL}/images/title.jpg`} alt=\"Title\" style={{ maxWidth: '100%', height: 'auto' }} />\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          label=\"Username\"\r\n          variant=\"outlined\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          variant=\"outlined\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n          Login\r\n        </Button>\r\n      </form>\r\n      <Button\r\n        variant=\"text\"\r\n        color=\"primary\"\r\n        onClick={onNavigateRegister}\r\n        sx={{ mt: 2 }}\r\n      >\r\n        Don't have an account? Register\r\n      </Button>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction StopwatchPage({ onStop }) {\r\n  const [time, setTime] = useState(0);\r\n  const [showWarning, setShowWarning] = useState(false);\r\n  const intervalId = useRef(null);\r\n  const warningTimeout = useRef(null);\r\n\r\n  useEffect(() => {\r\n    intervalId.current = setInterval(() => {\r\n      setTime((prevTime) => {\r\n        if (prevTime % 60 === 0) { // Every 60 seconds\r\n          sendPeriodicUpdate();\r\n        }\r\n        return prevTime + 1;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(intervalId.current);\r\n      if (warningTimeout.current) {\r\n        clearTimeout(warningTimeout.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const sendPeriodicUpdate = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/update-study', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      const data = await response.json();\r\n      console.log(data.result)\r\n      if (data.result !== 'correct') {\r\n        displayWarning();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during fetch:', error);\r\n    }\r\n  };\r\n\r\n  const displayWarning = () => {\r\n    setShowWarning(true);\r\n    if (warningTimeout.current) {\r\n      clearTimeout(warningTimeout.current);\r\n    }\r\n    warningTimeout.current = setTimeout(() => {\r\n      setShowWarning(false);\r\n    }, 10000); // Hide the warning after 10 seconds\r\n  };\r\n\r\n  const handleStop = () => {\r\n    clearInterval(intervalId.current);\r\n    onStop(time);\r\n  };\r\n\r\n  const formatTime = (totalSeconds) => {\r\n    const hours = Math.floor(totalSeconds / 3600);\r\n    const minutes = Math.floor((totalSeconds % 3600) / 60);\r\n    const seconds = totalSeconds % 60;\r\n  \r\n    return [hours, minutes, seconds].map(unit => String(unit).padStart(2, '0')).join(':');\r\n  };\r\n\r\n  return (\r\n    <Box mt={5} textAlign=\"center\">\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        {formatTime(time)}\r\n      </Typography>\r\n      <Button onClick={handleStop} variant=\"contained\" color=\"primary\">\r\n        Stop\r\n      </Button>\r\n      {showWarning && (\r\n        <Box mt={2} style={{ color: 'red' }}>\r\n          <Typography>Warning: Please correct your posture!</Typography>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default StopwatchPage;\r\n","import React, { useState } from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Box from '@mui/material/Box';\r\nimport { PieChart, Pie, Cell, Tooltip } from 'recharts';\r\nimport Modal from '@mui/material/Modal';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction WeeklyGrid({ studyData }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const handleOpen = (data) => {\r\n    setSelectedData(data);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const COLORS = ['#0088FE', '#FF8042']; // Blue for correct, Orange for incorrect\r\n\r\n  return (\r\n    <Box mt={2}>\r\n      <Grid container spacing={2}>\r\n        {studyData.map((entry, index) => {\r\n          const data = [\r\n            { name: 'Correct Posture', value: entry.correctPostureTime },\r\n            { name: 'Incorrect Posture', value: entry.incorrectPostureTime },\r\n          ];\r\n\r\n          return (\r\n            <Grid item xs={12} sm={4} key={index} onClick={() => handleOpen(entry)}>\r\n              <Paper elevation={3} sx={{ padding: 2, cursor: 'pointer', textAlign: 'center' }}>\r\n                <Typography variant=\"subtitle1\">{entry.date}</Typography>\r\n                <PieChart width={200} height={200}>\r\n                  <Pie data={data} cx=\"35%\" cy=\"50%\" outerRadius={60} dataKey=\"value\">\r\n                    {data.map((entry, index) => (\r\n                      <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                    ))}\r\n                  </Pie>\r\n                  <Tooltip />\r\n                </PieChart>\r\n              </Paper>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n\r\n      <Modal\r\n  open={open}\r\n  onClose={handleClose}\r\n  aria-labelledby=\"study-details\"\r\n  aria-describedby=\"study-details-description\"\r\n>\r\n  <Box sx={{ \r\n      position: 'absolute', \r\n      top: '50%', \r\n      left: '50%', \r\n      transform: 'translate(-50%, -50%)', \r\n      bgcolor: 'background.paper', \r\n      boxShadow: 24, \r\n      p: 4, \r\n      maxWidth: 500\r\n    }}>\r\n    <Typography id=\"study-details\" variant=\"h6\" component=\"h2\">\r\n      Study Details - {selectedData.date}\r\n    </Typography>\r\n    <img src={`${process.env.PUBLIC_URL}/images/cat1.png`} alt=\"Cat\" style={{ maxWidth: '100%', height: 'auto', marginTop: '20px' }} />\r\n    <Typography id=\"study-details-description\" sx={{ mt: 2 }}>\r\n      Correct Posture Time: {selectedData.correctPostureTime} minutes\r\n    </Typography>\r\n    <Typography id=\"study-details-description\">\r\n      Incorrect Posture Time: {selectedData.incorrectPostureTime} minutes\r\n    </Typography>\r\n  </Box>\r\n</Modal>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default WeeklyGrid;\r\n","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\n\r\nfunction IOTSettings({ onSetIOT }) {\r\n  return (\r\n    <Button onClick={onSetIOT} variant=\"contained\" color=\"primary\" sx={{ mt: 2 }}>\r\n      Set IOT Preferences\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default IOTSettings;\r\n","import React, { useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\n\r\nfunction RegisterPage({ onRegister, onNavigateLogin }) {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [email, setEmail] = useState(''); // Additional field for email\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/register/`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          id: username,\r\n          password: password,\r\n          email: email,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        // Handle successful registration (you can adjust this part as needed)\r\n        console.log('Registration successful:', data.message);\r\n        onRegister(username, email, password);\r\n      } else {\r\n        // Handle errors, such as user already exists\r\n        console.error('Registration error:', data.detail);\r\n      }\r\n    } catch (error) {\r\n      console.error('Network error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box mt={5}>\r\n        <img src={`${process.env.PUBLIC_URL}/images/title.jpg`} alt=\"Title\" style={{ maxWidth: '100%', height: 'auto' }} />\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          label=\"Username\"\r\n          variant=\"outlined\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          label=\"Email\"\r\n          variant=\"outlined\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          variant=\"outlined\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n          Register\r\n        </Button>\r\n        <Button\r\n        variant=\"text\"\r\n        color=\"primary\"\r\n        onClick={onNavigateLogin}\r\n        sx={{ mt: 2 }}\r\n      >\r\n        Already have an account? Login\r\n      </Button>\r\n      </form>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport LoginPage from './LoginPage';\nimport StopwatchPage from './StopwatchPage';\nimport WeeklyGrid from './WeeklyGrid';\nimport IOTSettings from './IOTSettings';\nimport RegisterPage from './RegisterPage';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Container from '@mui/material/Container';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableRow from '@mui/material/TableRow';\nimport ThermostatIcon from '@mui/icons-material/Thermostat';\nimport OpacityIcon from '@mui/icons-material/Opacity';\nimport LightModeIcon from '@mui/icons-material/LightMode';\nimport Typography from '@mui/material/Typography';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#ff7f50',\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [onStopwatchPage, setOnStopwatchPage] = useState(false);\n  const [studyData, setStudyData] = useState([]);\n  const [advise, setAdvise] = useState('');\n\n  const fetchAdvise = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/advise`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      let data = await response.text();\n      if (data.startsWith('\"') && data.endsWith('\"')) {\n        data = data.substring(1, data.length - 1);\n      }\n      setAdvise(data);\n    } catch (error) {\n      console.error('Error fetching Advise:', error);\n    }\n  }\n\n  // Fetch study data from API\n  const fetchStudyData = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/study-data`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setStudyData(data);\n    } catch (error) {\n      console.error('Error fetching study data:', error);\n    }\n  };\n\n  const fetchEnvData = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/env`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setEnvData({\n        humidity: data.humidity,\n        temperature: data.temperature,\n        brightness: data.brightness\n      });\n    } catch (error) {\n      console.error('Error fetching environment data:', error);\n    }\n  };\n\n\n  useEffect(() => {\n    fetchStudyData();\n    fetchAdvise();\n    fetchEnvData();\n  }, []);\n\n  const [envData, setEnvData] = useState({\n    humidity: null,\n    temperature: null,\n    brightness: null\n  });\n\n  const [currentTemp, setCurrentTemp] = useState(22);\n  const [currentHumid, setCurrentHumid] = useState(45);\n  const [preferredTemp, setPreferredTemp] = useState(24);\n  const [preferredHumid, setPreferredHumid] = useState(50);\n\n  const handleLogin = () => setLoggedIn(true);\n  const handleStartStudy = () => setOnStopwatchPage(true);\n  const handleStopStudy = async (studiedTime) => {\n    setOnStopwatchPage(false);\n    // Process the studied time if needed\n    console.log('Studied Time:', studiedTime);\n    // Fetch updated study data from API\n    await fetchStudyData();\n    await fetchAdvise();\n  };\n\n  const handleSetIOT = () => {\n    // Set IOT logic here\n  };\n\n  const handleRegister = (username, email, password) => {\n    // Handle the registration logic here\n    console.log(username, email, password);\n  };\n\n  const formatTime = (totalSeconds) => {\n    const hours = Math.floor(totalSeconds / 3600);\n    const minutes = Math.floor((totalSeconds % 3600) / 60);\n    const seconds = totalSeconds % 60;\n  \n    return [hours, minutes, seconds]\n      .map(unit => String(unit).padStart(2, '0'))\n      .join(':');\n  };\n\n  const getTodaysStudyTime = () => {\n    const now = new Date();\n    const koreaTime = new Date(now.getTime() + (9 * 60 * 60 * 1000)); // Adding 9 hours for KST\n\n    const today = koreaTime.toISOString().split('T')[0];\n    const todayData = studyData.find(entry => entry.date === today);\n    const totalSecondsToday = (todayData ? (todayData.correctPostureTime + todayData.incorrectPostureTime) : 0) * 60;\n    return formatTime(totalSecondsToday);\n  };\n\n  const [onRegisterPage, setOnRegisterPage] = useState(false);\n  const navigateToRegister = () => setOnRegisterPage(true);\n  const navigateToLogin = () => setOnRegisterPage(false);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Box display=\"flex\">\n        <Container maxWidth=\"sm\">\n          {!loggedIn && !onRegisterPage ? (\n            <LoginPage onLogin={handleLogin} onNavigateRegister={navigateToRegister} />\n          ) : onRegisterPage ? (\n            <RegisterPage onRegister={handleRegister} onNavigateLogin={navigateToLogin} />\n          ) : onStopwatchPage ? (\n            <StopwatchPage onStop={handleStopStudy} />\n          ) : (\n            <Box textAlign=\"center\" mt={5}>\n              <Typography variant=\"h4\" sx={{ mb: 2 }}>\n                {getTodaysStudyTime()}\n              </Typography>\n              <Button variant=\"contained\" color=\"primary\" onClick={handleStartStudy} sx={{ mb: 2 }}>\n                Start Study\n              </Button>\n              {advise && (\n            <>\n              <Box textAlign=\"center\" mt={5}>\n                <img src={`${process.env.PUBLIC_URL}/images/doctor.png`} alt=\"Advice\" style={{ maxWidth: '50%', height: 'auto' }} />\n              </Box>\n              <Typography>{advise}</Typography>\n            </>\n          )}\n              <WeeklyGrid studyData={studyData} />\n              <Table sx={{ mt: 2, mx: 'auto' }}>\n                <TableBody>\n                  <TableRow>\n                    <TableCell align=\"center\"><ThermostatIcon /></TableCell>\n                    <TableCell align=\"center\">{envData.temperature ? `${envData.temperature}°C` : '--'}</TableCell>\n                    <TableCell align=\"center\">{preferredTemp}°C</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell align=\"center\"><OpacityIcon /></TableCell>\n                    <TableCell align=\"center\">{envData.humidity ? `${envData.humidity}%` : '--'}</TableCell>\n                    <TableCell align=\"center\">{preferredHumid}%</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell align=\"center\"><LightModeIcon /></TableCell>\n                    <TableCell align=\"center\">{envData.brightness ? `${envData.brightness}` : '--'}</TableCell>\n                    <TableCell align=\"center\">--</TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n              <IOTSettings onSetIOT={handleSetIOT} />\n            </Box>\n          )}\n        </Container>\n      </Box>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}